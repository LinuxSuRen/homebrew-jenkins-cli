# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.37"
  bottle :unneeded

  if OS.mac? && Hardware::CPU.intel?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.37/jcli-darwin-amd64.tar.gz"
    sha256 "510b48a7710f2908054331669e41a176f36a11c4e653dd63f1f2b43e690a6702"
  end
  if OS.linux? && Hardware::CPU.intel?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.37/jcli-linux-amd64.tar.gz"
    sha256 "3166717b6716ebd29dec212eaa75a8c8763662cca40c334519d6f9b97856f9a7"
  end
  if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.37/jcli-linux-arm64.tar.gz"
    sha256 "90d8e0fc36929eb06db2fcd386f0145ee3f4605bdb8ee626a1e67865460dee96"
  end

  depends_on "vim" => :optional
  depends_on "bash-completion" => :optional

  def install
    bin.install name

    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output

    (Pathname.pwd/"man").mkpath
    system "#{bin}/jcli", "doc", "--doc-type", "ManPage", "man"
    man1.install Dir["man/*.1"]

    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
