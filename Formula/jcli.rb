# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.27"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.27/jcli-darwin-amd64.tar.gz"
    sha256 "2f81e2be981d0afc6026c789dd164d7a2abdcea6e05056d27cfdab0c3386109e"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.27/jcli-linux-amd64.tar.gz"
      sha256 "0f780db467003b8c7e434811f14463773546827d7a7300d95e13a6ffa492cedd"
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.27/jcli-linux-arm64.tar.gz"
        sha256 "6be54d7c2afe0b85443d6088a2179f10dbf40bc66d26f1e6c943f518107d8a04"
      else
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.27/jcli-linux-arm.tar.gz"
        sha256 "1d581e823cdaace58069ec30bd0e4d94166261668c65df68475b1c6826588898"
      end
    end
  end

  def install
    bin.install name
    
    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output
    
    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output
    
    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
