# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.29"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.29/jcli-darwin-amd64.tar.gz"
    sha256 "e5d56a0627df3531f1198335748efcbc034344529546abc423076bba7c7e481e"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.29/jcli-linux-amd64.tar.gz"
      sha256 "98bffb1b91ed9961f3359c930453f4761bf3a63515f9244e6e3e40c18e6bfd5d"
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.29/jcli-linux-arm64.tar.gz"
        sha256 "98f9ea9903853790a7cc6835b761c6247e4e92cfa1c8713325233b9c84036a17"
      else
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.29/jcli-linux-arm.tar.gz"
        sha256 "5d6d5bdfef9d45f918046d5b4b6a40844b7e28c342050c49271f22ec3a702f50"
      end
    end
  end

  def install
    bin.install name
    
    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output
    
    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output
    
    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
