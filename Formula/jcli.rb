# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.28"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.28/jcli-darwin-amd64.tar.gz"
    sha256 "9f828b0b69dc9f32d78cd4ebb13cb5ebf423576e64cd957a3afdc1a6f26fb731"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.28/jcli-linux-amd64.tar.gz"
      sha256 "73af9acd1bed1def7eb19cbff570d9afb049c910fb4d13c1017b64fa04a7041c"
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.28/jcli-linux-arm64.tar.gz"
        sha256 "a3b59d1d070d0528fe4cec590b2dd351cd483d9d21b164357651b6de1336e34f"
      else
        url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.28/jcli-linux-arm.tar.gz"
        sha256 "fdbee90df9a5f9d6f259ab3bb5fa42602634e6ec06a28b922b654da73425b609"
      end
    end
  end

  def install
    bin.install name
    
    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output
    
    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output
    
    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
