# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.38"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.38/jcli-darwin-amd64.tar.gz"
      sha256 "841d32e45332b40bf8351e5bab5e0ee2c92954aa6663558607ea95658b44ad85"
    end
    if Hardware::CPU.arm?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.38/jcli-darwin-arm64.tar.gz"
      sha256 "812802896d2c8c7e51a6e40b1000a51e5baf0943bcd99679a166f3d3f11f114d"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.38/jcli-linux-amd64.tar.gz"
      sha256 "be49cc9bf7a9b2a9cc76ad5fef1b9a5e123b4ffe0145f9c18cf8aa5f0801c4ac"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.38/jcli-linux-arm64.tar.gz"
      sha256 "46a479beaf3127b77f12a334b49a79b5b922b7ebb5cba5658115338399540779"
    end
  end

  depends_on "vim" => :optional
  depends_on "bash-completion" => :optional

  def install
    bin.install name

    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output

    (Pathname.pwd/"man").mkpath
    system "#{bin}/jcli", "doc", "--doc-type", "ManPage", "man"
    man1.install Dir["man/*.1"]

    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
