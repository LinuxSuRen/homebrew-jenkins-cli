# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Jcli < Formula
  desc "Jenkins CLI allows you manage your Jenkins as an easy way"
  homepage "https://github.com/jenkins-zh/jenkins-cli"
  version "0.0.33"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.33/jcli-darwin-amd64.tar.gz"
    sha256 "7967842e9c7eedec4c14ef9948cbb57738e3726c676442f4bf857c1d5eed0902"
  end
  if OS.linux? && Hardware::CPU.intel?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.33/jcli-linux-amd64.tar.gz"
    sha256 "fe7f5286e4229b2a691f1fe84575469622bfc738f123acb4f9f49c89fd2bf930"
  end
  if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
    url "https://github.com/jenkins-zh/jenkins-cli/releases/download/v0.0.33/jcli-linux-arm64.tar.gz"
    sha256 "1ae0d1d8bd80b424867fafb49f2e87b1c0ac5a0acf5f8c9ff9f4da4179e52072"
  end

  depends_on "vim" => :optional
  depends_on "bash-completion" => :optional

  def install
    bin.install name

    # Install bash completion
    output = Utils.popen_read("#{bin}/jcli completion")
    (bash_completion/"jcli").write output

    # Install zsh completion
    output = Utils.popen_read("#{bin}/jcli completion --type zsh")
    (zsh_completion/"_jcli").write output

    (Pathname.pwd/"man").mkpath
    system "#{bin}/jcli", "doc", "--doc-type", "ManPage", "man"
    man1.install Dir["man/*.1"]

    prefix.install_metafiles
  end

  test do
    version_output = shell_output("#{bin}/jcli version")
    assert_match version.to_s, version_output
  end
end
